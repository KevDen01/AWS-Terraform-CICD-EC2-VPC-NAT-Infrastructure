name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-west-2

      # Step 3: Create S3 Bucket for Terraform State
      - name: Create S3 Bucket for Terraform State
        run: |
          BUCKET_NAME=my-terraform-state-bucket-${{ github.run_id }}
          aws s3api create-bucket --bucket $BUCKET_NAME --region us-west-2 --create-bucket-configuration LocationConstraint=us-west-2
          echo "bucket_name=$BUCKET_NAME" >> $GITHUB_ENV

      # Step 4: Create DynamoDB Table for State Locking
      - name: Create DynamoDB Table for State Locking
        run: |
          TABLE_NAME=my-terraform-lock-table-${{ github.run_id }}
          aws dynamodb create-table \
            --table-name $TABLE_NAME \
            --attribute-definitions AttributeName=LockID,AttributeType=S \
            --key-schema AttributeName=LockID,KeyType=HASH \
            --billing-mode PAY_PER_REQUEST
          echo "dynamodb_table=$TABLE_NAME" >> $GITHUB_ENV

      # Step 5: Create EC2 Key Pairs
      - name: Create EC2 Key Pair
        run: |
          # Create private key
          aws ec2 create-key-pair --key-name key-ec2-private --query 'KeyMaterial' --output text > key-ec2-private.pem
          chmod 400 key-ec2-private.pem
          echo "Private key 'key-ec2-private.pem' created."

          # Create public key
          aws ec2 create-key-pair --key-name key-ec2-public --query 'KeyMaterial' --output text > key-ec2-public.pem
          chmod 400 key-ec2-public.pem
          echo "Public key 'key-ec2-public.pem' created."

          echo "private_key_name=key-ec2-private.pem" >> $GITHUB_ENV
          echo "public_key_name=key-ec2-public.pem" >> $GITHUB_ENV

      - name: Generate Backend Configuration
        run: |
          cat <<EOF > backend.tf
          terraform {
            backend "s3" {
              bucket         = "$bucket_name"
              key            = "terraform/state.tfstate"
              region         = "us-west-2"
              encrypt        = true
              dynamodb_table = "$dynamodb_table"
              acl            = "bucket-owner-full-control"
            }
          }
          EOF

      # Step 6: Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Step 7: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 8: Terraform Plan
      - name: Terraform Plan
        run: terraform plan

      # Step 9: Terraform Apply
      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve
